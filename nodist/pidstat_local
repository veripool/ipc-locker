#!/usr/bin/perl -w
# See copyright, etc in below POD section.
######################################################################

use lib './blib/lib';	# testing

require 5.006_001;
use Getopt::Long;
use IPC::PidStat;
use strict;

#======================================================================

our $Opt_Pid = $$;

#======================================================================
# main

autoflush STDOUT 1;
autoflush STDERR 1;
Getopt::Long::config ("no_auto_abbrev");
if (! GetOptions (
		  "<>"		=> sub { die "%Error: Unknown parameter: $_[0]\n"; },
		  "pid=i"	=> \$Opt_Pid,
		  )) {
    die "%Error: Bad usage, try 'pidstat_local --help'\n";
}

$Opt_Pid or die "%Error: No --pid,";

my $exists = IPC::PidStat::local_pid_exists($Opt_Pid);
if (!defined $exists) {
    print "Local PID $Opt_Pid UNKNOWN\n";
} elsif ($exists) {
    print "Local PID $Opt_Pid EXISTS\n";
} else {
    print "Local PID $Opt_Pid DEAD\n";
}

#######################################################################
__END__

=pod

=head1 NAME

pidstat_local -

=head1 SYNOPSIS

=head1 DESCRIPTION

Debug tool to check local pid status

=head1 ARGUMENTS

=over 4

=back

=head1 DISTRIBUTION

The latest version is available from CPAN and from L<http://www.veripool.org/>.

Copyright 2008-2009 by Wilson Snyder.  This package is free software; you
can redistribute it and/or modify it under the terms of either the GNU
Lesser General Public License or the Perl Artistic License.

=head1 AUTHORS

Wilson Snyder <wsnyder@wsnyder.org>

=head1 SEE ALSO

=cut

######################################################################
### Local Variables:
### compile-command: "cd .. ; nodist/pidstat_local --pid 1 ; nodist/pidstat_local --pid 999999 ; nodist/pidstat_local --pid $$"
### End:
